import { IHandler } from "./bao";
import { Context } from "./context";
export declare class Middleware {
    #private;
    /**
     * Register the middleware with the Middleware object
     *
     * @param fn The middleware function
     * @param pos The position the middleware should be run relative the the route handler
     * @returns The position of the middleware in its respective queue
     */
    register(fn: IHandler, pos: MiddlewarePosition): number;
    /**
     * Runs all the middleware to be run before the route handler
     *
     * @param ctx The Context supplied by the router
     * @returns The Content object just before it reaches the route handler
     */
    before(ctx: Context): Promise<Context>;
    /**
     * Runs all the middleware to be run after the route handler
     *
     * @param ctx The Context from the route handler
     * @returns The final Context object
     */
    after(ctx: Context): Promise<Context>;
}
export declare enum MiddlewarePosition {
    Before = 0,
    After = 1
}
